<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__unit_test1_8cs_source" xml:lang="en-US">
<title>UnitTest1.cs</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__unit_test1_8cs_source_1l00001"/>00001 
<anchor xml:id="__unit_test1_8cs_source_1l00002"/>00002 <emphasis role="comment">/**************************************************************************</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;&#32;File:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnitTest1.cs&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;&#32;Copyright:&#32;&#32;&#32;(c)&#32;2008,&#32;Ingineria&#32;Programarii&#32;Proiect&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;&#32;Description:&#32;Proiect&#32;la&#32;materia&#32;&quot;Ingineria&#32;Programarii&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ce&#32;contine&#32;chestionare&#32;de&#32;cultura&#32;generala&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;din&#32;diverse&#32;domenii.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00009"/>00009 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;&#32;This&#32;program&#32;is&#32;free&#32;software;&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00011"/>00011 <emphasis role="comment">&#32;*&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;&#32;the&#32;Free&#32;Software&#32;Foundation.&#32;This&#32;program&#32;is&#32;distributed&#32;in&#32;the&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00014"/>00014 <emphasis role="comment">&#32;*&#32;&#32;the&#32;implied&#32;warranty&#32;of&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00015"/>00015 <emphasis role="comment">&#32;*&#32;&#32;PURPOSE.&#32;See&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00017"/>00017 <emphasis role="comment">&#32;**************************************************************************/</emphasis>
<anchor xml:id="__unit_test1_8cs_source_1l00018"/>00018 
<anchor xml:id="__unit_test1_8cs_source_1l00019"/>00019 <emphasis role="keyword">using</emphasis>&#32;Microsoft.VisualStudio.TestTools.UnitTesting;
<anchor xml:id="__unit_test1_8cs_source_1l00020"/>00020 <emphasis role="keyword">using</emphasis>&#32;System;
<anchor xml:id="__unit_test1_8cs_source_1l00021"/>00021 <emphasis role="keyword">using</emphasis>&#32;ProiectIP;
<anchor xml:id="__unit_test1_8cs_source_1l00022"/><link linkend="_namespace_test">00022</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_test">Test</link>
<anchor xml:id="__unit_test1_8cs_source_1l00023"/>00023 {
<anchor xml:id="__unit_test1_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;[TestClass]
<anchor xml:id="__unit_test1_8cs_source_1l00025"/><link linkend="_class_test_1_1_unit_test1">00025</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_test_1_1_unit_test1">UnitTest1</link>
<anchor xml:id="__unit_test1_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00028"/><link linkend="_class_test_1_1_unit_test1_1a107d07e93cc94958f8c759fc24edcf17">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a107d07e93cc94958f8c759fc24edcf17">TestScor_0</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Calculeaza&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Calculeaza(0,&#32;64m);
<anchor xml:id="__unit_test1_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(0,&#32;c.Rezultat);
<anchor xml:id="__unit_test1_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00034"/>00034 
<anchor xml:id="__unit_test1_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00036"/><link linkend="_class_test_1_1_unit_test1_1a84437e306b29df020d8a87f8d197b3f5">00036</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a84437e306b29df020d8a87f8d197b3f5">TestScor_minus5</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Calculeaza&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Calculeaza(-5,&#32;64m);
<anchor xml:id="__unit_test1_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00041"/>00041 
<anchor xml:id="__unit_test1_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00043"/><link linkend="_class_test_1_1_unit_test1_1ab8d593862718ef092825889e144a20ed">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1ab8d593862718ef092825889e144a20ed">TestScor_minusminus</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Calculeaza&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Calculeaza(-5,&#32;-5);
<anchor xml:id="__unit_test1_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00048"/>00048 
<anchor xml:id="__unit_test1_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00050"/><link linkend="_class_test_1_1_unit_test1_1af698b7bca0791c3b92529fcf178c54a9">00050</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1af698b7bca0791c3b92529fcf178c54a9">TestScor_zero</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Calculeaza&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Calculeaza(0,&#32;0);
<anchor xml:id="__unit_test1_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00056"/><link linkend="_class_test_1_1_unit_test1_1a9f93926ea593229990514cb81452a514">00056</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a9f93926ea593229990514cb81452a514">TestScor_calcul</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Calculeaza&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Calculeaza(4,&#32;2);
<anchor xml:id="__unit_test1_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(200,&#32;c.Rezultat);
<anchor xml:id="__unit_test1_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00062"/>00062 
<anchor xml:id="__unit_test1_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00064"/><link linkend="_class_test_1_1_unit_test1_1a9722cd073ca4ae4d1ffa4e0bd23aa9b2">00064</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a9722cd073ca4ae4d1ffa4e0bd23aa9b2">TestCalculVarsta_varsta</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.CalculeazaVarsta&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.CalculeazaVarsta(2000);
<anchor xml:id="__unit_test1_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(22,&#32;c.Rezultat);
<anchor xml:id="__unit_test1_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00071"/><link linkend="_class_test_1_1_unit_test1_1a0959171b508197ab0e9174cb56dafe8c">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a0959171b508197ab0e9174cb56dafe8c">TestCalculVarsta_minus</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.CalculeazaVarsta&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.CalculeazaVarsta(-2000);
<anchor xml:id="__unit_test1_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00077"/><link linkend="_class_test_1_1_unit_test1_1a95dbfcdd2880d8abd4b34cede4bbf2b5">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a95dbfcdd2880d8abd4b34cede4bbf2b5">TestCalculVarsta_maiMicCa16</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.CalculeazaVarsta&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.CalculeazaVarsta(2020);
<anchor xml:id="__unit_test1_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00083"/><link linkend="_class_test_1_1_unit_test1_1a01917cd29ebffcc19130065d69eeeab5">00083</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a01917cd29ebffcc19130065d69eeeab5">TestCalculVarsta_anViitor</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.CalculeazaVarsta&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.CalculeazaVarsta(2080);
<anchor xml:id="__unit_test1_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00089"/><link linkend="_class_test_1_1_unit_test1_1a2ea3d1d16a9d992e3580923c265c23a3">00089</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a2ea3d1d16a9d992e3580923c265c23a3">TestCalculVarsta_1922</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.CalculeazaVarsta&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.CalculeazaVarsta(1922);
<anchor xml:id="__unit_test1_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(100,&#32;c.Rezultat);
<anchor xml:id="__unit_test1_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00096"/><link linkend="_class_test_1_1_unit_test1_1a7caf41a961eb849967d1b844be4fdeb2">00096</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a7caf41a961eb849967d1b844be4fdeb2">TestCalculVarsta_1921</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.CalculeazaVarsta&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.CalculeazaVarsta(1921);
<anchor xml:id="__unit_test1_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00102"/><link linkend="_class_test_1_1_unit_test1_1a1297a0efb4f0cc35498631bcf8e380da">00102</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a1297a0efb4f0cc35498631bcf8e380da">TestCalculVarsta_zero</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.CalculeazaVarsta&#32;c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.CalculeazaVarsta(0);
<anchor xml:id="__unit_test1_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(c.Valid);
<anchor xml:id="__unit_test1_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00107"/>00107 
<anchor xml:id="__unit_test1_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00109"/><link linkend="_class_test_1_1_unit_test1_1aa2c68a24ae227dcbc4d12bf2dbbc00bf">00109</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1aa2c68a24ae227dcbc4d12bf2dbbc00bf">TestVerificaNume_litere</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__unit_test1_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(ProiectIP.VerificaNume.AreDoarLitere(<emphasis role="stringliteral">&quot;re3t&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00115"/><link linkend="_class_test_1_1_unit_test1_1ae959bd7c3fd45bc89941d39043942a4b">00115</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1ae959bd7c3fd45bc89941d39043942a4b">TestVerificaNume_litereCorect</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(ProiectIP.VerificaNume.AreDoarLitere(<emphasis role="stringliteral">&quot;Elena&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00120"/><link linkend="_class_test_1_1_unit_test1_1a715b3e53baa7e89c35753ddaa787b256">00120</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a715b3e53baa7e89c35753ddaa787b256">TestVerificaNume_semn</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(ProiectIP.VerificaNume.AreDoarLitere(<emphasis role="stringliteral">&quot;El%ena&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00125"/><link linkend="_class_test_1_1_unit_test1_1a5e451944152d9d3f705e0a647f83d965">00125</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a5e451944152d9d3f705e0a647f83d965">TestVerificaNume_spatiu</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(ProiectIP.VerificaNume.AreDoarLitere(<emphasis role="stringliteral">&quot;El&#32;ena&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00130"/><link linkend="_class_test_1_1_unit_test1_1a0c48ea6b1e684aaa954269e45c0ea23a">00130</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a0c48ea6b1e684aaa954269e45c0ea23a">TestVerificaNume_literaMare</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(ProiectIP.VerificaNume.IncepeCuLiteraMare(<emphasis role="stringliteral">&quot;Elena&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00135"/><link linkend="_class_test_1_1_unit_test1_1adabda97a906ecc76b756608992051513">00135</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1adabda97a906ecc76b756608992051513">TestVerificaNume_AreLitereDiferite_1</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(ProiectIP.VerificaNume.ContineLitereDiferite(<emphasis role="stringliteral">&quot;elena&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00139"/>00139 
<anchor xml:id="__unit_test1_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00141"/><link linkend="_class_test_1_1_unit_test1_1a7e547b8aa51e5ac49eab1e77e5b3582d">00141</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a7e547b8aa51e5ac49eab1e77e5b3582d">TestVerificaNume_AreLitereDiferite_2</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(ProiectIP.VerificaNume.ContineLitereDiferite(<emphasis role="stringliteral">&quot;eeee&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00146"/><link linkend="_class_test_1_1_unit_test1_1a2f2af164e232d580f4be5bcda0c4a80a">00146</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a2f2af164e232d580f4be5bcda0c4a80a">TestVerificaNume_AreLitereDiferite_3</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(ProiectIP.VerificaNume.ContineLitereDiferite(<emphasis role="stringliteral">&quot;Eeee&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00151"/><link linkend="_class_test_1_1_unit_test1_1a865dee21a16a1c417e7d2a37c2f635a0">00151</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a865dee21a16a1c417e7d2a37c2f635a0">TestVerificaNume_AreLitereDiferite_4</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(ProiectIP.VerificaNume.ContineLitereDiferite(<emphasis role="stringliteral">&quot;eeEe&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00156"/><link linkend="_class_test_1_1_unit_test1_1af6919b22ef0fe45868b2d27368b696f9">00156</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1af6919b22ef0fe45868b2d27368b696f9">TestVerificaNume_AreLitereDiferite_5</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(ProiectIP.VerificaNume.ContineLitereDiferite(<emphasis role="stringliteral">&quot;EEEE&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00161"/><link linkend="_class_test_1_1_unit_test1_1a91c011998b321409e3ee6c98fe6c560d">00161</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a91c011998b321409e3ee6c98fe6c560d">TestVerificaNume_literaMica</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(ProiectIP.VerificaNume.IncepeCuLiteraMare(<emphasis role="stringliteral">&quot;elena&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00166"/><link linkend="_class_test_1_1_unit_test1_1a0b54754c3d7caf0437711fc76e0ca917">00166</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a0b54754c3d7caf0437711fc76e0ca917">TestVerificaNume_gol</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(ProiectIP.VerificaNume.IncepeCuLiteraMare(<emphasis role="stringliteral">&quot;&quot;</emphasis>));
<anchor xml:id="__unit_test1_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00171"/><link linkend="_class_test_1_1_unit_test1_1ab3852f531bd8f943323c94c839f41863">00171</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1ab3852f531bd8f943323c94c839f41863">TestVerificaIntrebare</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Intrebare&#32;a&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Intrebare(<emphasis role="stringliteral">&quot;enunt&quot;</emphasis>,<emphasis role="stringliteral">&quot;var1&quot;</emphasis>,<emphasis role="stringliteral">&quot;var2&quot;</emphasis>,<emphasis role="stringliteral">&quot;var3&quot;</emphasis>,<emphasis role="stringliteral">&quot;var4&quot;</emphasis>,3);
<anchor xml:id="__unit_test1_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(<emphasis role="stringliteral">&quot;enunt&quot;</emphasis>,&#32;a.Enunt);
<anchor xml:id="__unit_test1_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00177"/><link linkend="_class_test_1_1_unit_test1_1a6e897ef567ca06cb9a1bb1cb70561d2e">00177</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a6e897ef567ca06cb9a1bb1cb70561d2e">TestVerificaVariantaCorecta</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Intrebare&#32;a&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Intrebare(<emphasis role="stringliteral">&quot;enunt&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var1&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var2&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var3&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var4&quot;</emphasis>,&#32;4);
<anchor xml:id="__unit_test1_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(4,&#32;a.VariantaCorecta);
<anchor xml:id="__unit_test1_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00183"/><link linkend="_class_test_1_1_unit_test1_1a8160eaf7eba24253aad6538900fabd68">00183</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a8160eaf7eba24253aad6538900fabd68">TestVerificaFlagIntrebare</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Intrebare&#32;a&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Intrebare(<emphasis role="stringliteral">&quot;enunt&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var1&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var2&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var3&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var4&quot;</emphasis>,&#32;-1);
<anchor xml:id="__unit_test1_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(a.VerificaFlag);
<anchor xml:id="__unit_test1_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestMethod]
<anchor xml:id="__unit_test1_8cs_source_1l00189"/><link linkend="_class_test_1_1_unit_test1_1a16971bd59f60dc78afe95f31a27e6ca0">00189</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_test_1_1_unit_test1_1a16971bd59f60dc78afe95f31a27e6ca0">TestVerificaFlagIntrebareValoareMare</link>()
<anchor xml:id="__unit_test1_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__unit_test1_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProiectIP.Intrebare&#32;a&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ProiectIP.Intrebare(<emphasis role="stringliteral">&quot;enunt&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var1&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var2&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var3&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;var4&quot;</emphasis>,&#32;10);
<anchor xml:id="__unit_test1_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(a.VerificaFlag);
<anchor xml:id="__unit_test1_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;}
<anchor xml:id="__unit_test1_8cs_source_1l00195"/>00195 }
</programlisting></section>
